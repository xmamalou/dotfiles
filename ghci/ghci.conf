:set -Wall -Wno-type-defaults -XExtendedDefaultRules -XOverloadedStrings -interactive-print Text.Pretty.Simple.pPrint

import System.IO
import System.Directory
import System.Posix.Directory (changeWorkingDirectory)
import System.Info
import System.Posix.Env
import Data.Time
import Network.HTTP.Client
import Network.HTTP.Client.TLS
import qualified Data.ByteString.Lazy as BL

import Procex.Prelude
import Procex.Shell
import Procex.Shell.Labels

ls = mq "ls" "-l"
vim = mq "vim"
clear = mq "clear"

-- Haskell stuff

ghc = mq "ghc"
cabal = mq "cabal"
ghcup = mq "ghcup"
stack = mq "stack"
winghc = mq "winghc"
wincabal = mq "wincabal"
winghcup = mq "winghcup"
winstack = mq "winstack"

exec = mq
sudo = mq "sudo"
please = sudo
git = mq "git"
man = mq "man"
whereis = mq "whereis"

-- Nix stuff

nix = exec "nix"
nixShell = exec "nix-shell"

dir = ls
list = ls
listAll = ls "-a"
home = "/home/cybermantid"

getFileFromInternet fromFile toFile = (newManager tlsManagerSettings) >>= (\manager-> (parseRequest fromFile) >>= (\request -> (httpLbs request manager) >>= (\r -> BL.writeFile toFile (responseBody r))))

myPrompt _modules _line = getEnvDefault "PWD" "" >>= (\d -> (changeWorkingDirectory d) >> (pure $ "\ESC[38;5;240m\STX╭─\ESC[38;5;161m\STXcybermantid \ESC[m\STXat \ESC[38;5;166m\STXsol \ESC[min \ESC[92m\STX" ++ d ++ " \ESC[m\STX\n\ESC[38;5;240m\STX╰-\ESC[m\STXλ "))

:set prompt-function myPrompt

initInteractive
